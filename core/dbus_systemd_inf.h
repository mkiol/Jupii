/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp /home/mersdk/share/dev/Jupii/sailfish/../dbus/org.freedesktop.systemd1.Manager.xml -p ../core/dbus_systemd_inf
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DBUS_SYSTEMD_INF_H
#define DBUS_SYSTEMD_INF_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freedesktop.systemd1.Manager
 */
class OrgFreedesktopSystemd1ManagerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.systemd1.Manager"; }

public:
    OrgFreedesktopSystemd1ManagerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgFreedesktopSystemd1ManagerInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QDBusObjectPath> StartUnit(const QString &name, const QString &mode)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(name) << QVariant::fromValue(mode);
        return asyncCallWithArgumentList(QStringLiteral("StartUnit"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void JobRemoved(uint id, const QDBusObjectPath &job, const QString &unit, const QString &result);
};

namespace org {
  namespace freedesktop {
    namespace systemd1 {
      typedef ::OrgFreedesktopSystemd1ManagerInterface Manager;
    }
  }
}
#endif
