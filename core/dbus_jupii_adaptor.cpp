/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp /home/mersdk/share/dev/Jupii/sailfish/../dbus/org.jupii.xml -a ../core/dbus_jupii_adaptor
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "../core/dbus_jupii_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class PlayerAdaptor
 */

PlayerAdaptor::PlayerAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

PlayerAdaptor::~PlayerAdaptor()
{
    // destructor
}

bool PlayerAdaptor::canControl() const
{
    // get the value of property canControl
    return qvariant_cast< bool >(parent()->property("canControl"));
}

QString PlayerAdaptor::deviceName() const
{
    // get the value of property deviceName
    return qvariant_cast< QString >(parent()->property("deviceName"));
}

bool PlayerAdaptor::playing() const
{
    // get the value of property playing
    return qvariant_cast< bool >(parent()->property("playing"));
}

void PlayerAdaptor::add(const QString &url, const QString &orig_url, const QString &name, const QString &author, const QString &description, int type, const QString &app, const QString &icon, bool once, bool play)
{
    // handle method call org.jupii.Player.add
    QMetaObject::invokeMethod(parent(), "add", Q_ARG(QString, url), Q_ARG(QString, orig_url), Q_ARG(QString, name), Q_ARG(QString, author), Q_ARG(QString, description), Q_ARG(int, type), Q_ARG(QString, app), Q_ARG(QString, icon), Q_ARG(bool, once), Q_ARG(bool, play));
}

void PlayerAdaptor::addPath(const QString &path, const QString &name)
{
    // handle method call org.jupii.Player.addPath
    QMetaObject::invokeMethod(parent(), "addPath", Q_ARG(QString, path), Q_ARG(QString, name));
}

void PlayerAdaptor::addPathOnce(const QString &path, const QString &name)
{
    // handle method call org.jupii.Player.addPathOnce
    QMetaObject::invokeMethod(parent(), "addPathOnce", Q_ARG(QString, path), Q_ARG(QString, name));
}

void PlayerAdaptor::addPathOnceAndPlay(const QString &path, const QString &name)
{
    // handle method call org.jupii.Player.addPathOnceAndPlay
    QMetaObject::invokeMethod(parent(), "addPathOnceAndPlay", Q_ARG(QString, path), Q_ARG(QString, name));
}

void PlayerAdaptor::addUrl(const QString &url, const QString &name)
{
    // handle method call org.jupii.Player.addUrl
    QMetaObject::invokeMethod(parent(), "addUrl", Q_ARG(QString, url), Q_ARG(QString, name));
}

void PlayerAdaptor::addUrlOnce(const QString &url, const QString &name)
{
    // handle method call org.jupii.Player.addUrlOnce
    QMetaObject::invokeMethod(parent(), "addUrlOnce", Q_ARG(QString, url), Q_ARG(QString, name));
}

void PlayerAdaptor::addUrlOnceAndPlay(const QString &url, const QString &name)
{
    // handle method call org.jupii.Player.addUrlOnceAndPlay
    QMetaObject::invokeMethod(parent(), "addUrlOnceAndPlay", Q_ARG(QString, url), Q_ARG(QString, name));
}

void PlayerAdaptor::appendPath(const QString &path)
{
    // handle method call org.jupii.Player.appendPath
    QMetaObject::invokeMethod(parent(), "appendPath", Q_ARG(QString, path));
}

void PlayerAdaptor::clearPlaylist()
{
    // handle method call org.jupii.Player.clearPlaylist
    QMetaObject::invokeMethod(parent(), "clearPlaylist");
}

void PlayerAdaptor::focus()
{
    // handle method call org.jupii.Player.focus
    QMetaObject::invokeMethod(parent(), "focus");
}

void PlayerAdaptor::pause()
{
    // handle method call org.jupii.Player.pause
    QMetaObject::invokeMethod(parent(), "pause");
}

void PlayerAdaptor::play()
{
    // handle method call org.jupii.Player.play
    QMetaObject::invokeMethod(parent(), "play");
}

void PlayerAdaptor::togglePlay()
{
    // handle method call org.jupii.Player.togglePlay
    QMetaObject::invokeMethod(parent(), "togglePlay");
}

