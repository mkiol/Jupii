--- site-packages/yt_dlp/utils.py	2022-08-17 20:46:00.339624643 +0200
+++ site-packages/yt_dlp/utils.py	2022-08-17 20:53:43.070612932 +0200
@@ -1722,10 +1722,13 @@
     if timezone is None:
         timezone, date_str = extract_timezone(date_str)
 
-    with contextlib.suppress(ValueError):
-        date_format = f'%Y-%m-%d{delimiter}%H:%M:%S'
-        dt = datetime.datetime.strptime(date_str, date_format) - timezone
-        return calendar.timegm(dt.timetuple())
+    try:
+        with contextlib.suppress(ValueError):
+            date_format = f'%Y-%m-%d{delimiter}%H:%M:%S'
+            dt = datetime.datetime.strptime(date_str, date_format) - timezone
+            return calendar.timegm(dt.timetuple())
+    except TypeError:
+        return None
 
 
 def date_formats(day_first=True):
@@ -1744,16 +1747,19 @@
     date_str = re.sub(r'(?i)\s*(?:AM|PM)(?:\s+[A-Z]+)?', '', date_str)
     _, date_str = extract_timezone(date_str)
 
-    for expression in date_formats(day_first):
-        with contextlib.suppress(ValueError):
-            upload_date = datetime.datetime.strptime(date_str, expression).strftime('%Y%m%d')
-    if upload_date is None:
-        timetuple = email.utils.parsedate_tz(date_str)
-        if timetuple:
+    try:
+        for expression in date_formats(day_first):
             with contextlib.suppress(ValueError):
-                upload_date = datetime.datetime(*timetuple[:6]).strftime('%Y%m%d')
-    if upload_date is not None:
-        return str(upload_date)
+                upload_date = datetime.datetime.strptime(date_str, expression).strftime('%Y%m%d')
+        if upload_date is None:
+            timetuple = email.utils.parsedate_tz(date_str)
+            if timetuple:
+                with contextlib.suppress(ValueError):
+                    upload_date = datetime.datetime(*timetuple[:6]).strftime('%Y%m%d')
+        if upload_date is not None:
+            return str(upload_date)
+    except TypeError:
+        return None
 
 
 def unified_timestamp(date_str, day_first=True):
@@ -1779,14 +1785,17 @@
     if m:
         date_str = m.group(1)
 
-    for expression in date_formats(day_first):
-        with contextlib.suppress(ValueError):
-            dt = datetime.datetime.strptime(date_str, expression) - timezone + datetime.timedelta(hours=pm_delta)
-            return calendar.timegm(dt.timetuple())
+    try:
+        for expression in date_formats(day_first):
+            with contextlib.suppress(ValueError):
+                dt = datetime.datetime.strptime(date_str, expression) - timezone + datetime.timedelta(hours=pm_delta)
+                return calendar.timegm(dt.timetuple())
 
-    timetuple = email.utils.parsedate_tz(date_str)
-    if timetuple:
-        return calendar.timegm(timetuple) + pm_delta * 3600 - timezone.total_seconds()
+        timetuple = email.utils.parsedate_tz(date_str)
+        if timetuple:
+            return calendar.timegm(timetuple) + pm_delta * 3600 - timezone.total_seconds()
+    except TypeError:
+        return None
 
 
 def determine_ext(url, default_ext='unknown_video'):
@@ -1845,7 +1854,10 @@
             return datetime_round(new_date, unit)
         return new_date
 
-    return datetime_round(datetime.datetime.strptime(date_str, format), precision)
+    try:
+        return datetime_round(datetime.datetime.strptime(date_str, format), precision)
+    except TypeError:
+        return today
 
 
 def date_from_str(date_str, format='%Y%m%d', strict=False):
