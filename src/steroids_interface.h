/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp dbus/org.freedesktop.Tracker1.Steroids.xml -p src/steroids_interface
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef STEROIDS_INTERFACE_H
#define STEROIDS_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freedesktop.Tracker1.Steroids
 */
class OrgFreedesktopTracker1SteroidsInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.Tracker1.Steroids"; }

public:
    OrgFreedesktopTracker1SteroidsInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgFreedesktopTracker1SteroidsInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QStringList> Query(const QString &query, const QDBusUnixFileDescriptor &output_stream)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(query) << QVariant::fromValue(output_stream);
        return asyncCallWithArgumentList(QStringLiteral("Query"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace freedesktop {
    namespace Tracker1 {
      typedef ::OrgFreedesktopTracker1SteroidsInterface Steroids;
    }
  }
}
#endif
